/**
 * Welcome to ng2tree
 */
"use strict";
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"api.js","sourceRoot":"","sources":["../../lib/defs/api.ts"],"names":[],"mappings":"AAAA;;GAEG","sourcesContent":["/**\n * Welcome to ng2tree\n */\n\nexport interface IAllowDropFn {\n  (element:any, to:{parent:ITreeNode, index:number}):boolean;\n}\n/**\n* This is the interface of the options input of the tree.\n* See docs for more detailed explanations\n*/\nexport interface ITreeOptions {\n   /**\n    * Override children field. Default: 'children'\n    */\n   childrenField?: string;\n   /**\n    * Override display field. Default: 'name'\n    */\n   displayField?: string;\n   /**\n    * Override id field. Default: 'id'\n    */\n   idField?: string;\n   /**\n    * Override isExpanded field. Default: 'isExpanded'\n    */\n   isExpandedField?:string;\n   /**\n    * Override isHidden field. Default: 'isHidden'\n    */\n   isHiddenField?:string;\n   /**\n    * Supply function for getting fields asynchronously. Should return a Promise\n    */\n   getChildren?: (node:ITreeNode) => any;\n   /**\n    * Change the default mouse and key actions on the tree\n    */\n   actionMapping?: any;\n   /**\n    * Allow drag and drop on the tree. Default: false\n    */\n   allowDrag?: boolean;\n   /**\n    * Allow creation of folders when a node is dropped inside another node. Default: false\n    */\n   allowFolderFromNode?: boolean;\n   /**\n    * Allow drop on the tree.\n    * Either boolean value, or a function that takes the dragged element and drop location (parent, index)\n    * and returns a boolean value.\n    * Will be called when dragging over the nodes or between nodes, and allow to prevent the drop style\n    * Default: true\n    */\n   allowDrop?: boolean | IAllowDropFn;\n   /**\n   * Specify padding per node instead of children padding (to allow full row select for example)\n   */\n   levelPadding?: number;\n   /**\n    * deprecated\n    */\n   treeNodeTemplate?: any;\n   /**\n    * deprecated\n    */\n   loadingComponent?: any;\n   /**\n    * deprecated\n    */\n   hasCustomContextMenu?: any;\n   /**\n    * deprecated\n    */\n   context?: any;\n }\n\n/**\n * This is the interface of a single Tree Node\n */\nexport interface ITreeNode {\n  // properties\n  /**\n   * Parent node\n   */\n  parent: ITreeNode;\n  /**\n   * The value of the node's field that is used for displaying its content.\n   * By default 'name', unless stated otherwise in the options\n   */\n  displayField: string;\n  /**\n   * The children of the node.\n   * By default is determined by 'node.data.children', unless stated otherwise in the options\n   */\n  children: ITreeNode[];\n  /**\n   * Pointer to the original data.\n   */\n  data: any;\n  /**\n   * Pointer to the ElementRef of the TreeNodeComponent that's displaying this node\n   */\n  elementRef: any;\n  /**\n   * Level in the tree (starts from 1).\n   */\n  level: number;\n  /**\n   * Path in the tree: Array of IDs.\n   */\n  path: string[];\n\n  /**\n   * A unique key of this node among its siblings.\n   * By default it's the 'id' of the original node, unless stated otherwise in options.idField\n   */\n  id: any;\n\n  /**\n   * The context that was given in the options object.\n   */\n  context:any;\n\n  // helpers\n  isExpanded: boolean;\n  isActive: boolean;\n  isFocused:boolean;\n  isCollapsed:boolean;\n  isLeaf:boolean;\n  hasChildren:boolean;\n  isRoot:boolean;\n  isFolder:boolean;\n\n  // traversing\n  /**\n   * @param skipHidden whether to skip hidden nodes\n   * @returns next sibling (or null)\n   */\n  findNextSibling(skipHidden): ITreeNode;\n  /**\n   * @param skipHidden whether to skip hidden nodes\n   * @returns previous sibling (or null)\n   */\n  findPreviousSibling(skipHidden): ITreeNode;\n  /**\n   * @param skipHidden whether to skip hidden nodes\n   * @returns first child (or null)\n   */\n  getFirstChild(skipHidden): ITreeNode;\n  /**\n   * @param skipHidden whether to skip hidden nodes\n   * @returns last child (or null)\n   */\n  getLastChild(skipHidden): ITreeNode;\n  /**\n   * Finds the visually next node in the tree.\n   * @param goInside whether to look for children or just siblings\n   * @returns next node.\n   */\n  findNextNode(goInside: boolean): ITreeNode;\n  /**\n   * Finds the visually previous node in the tree.\n   * @param skipHidden whether to skip hidden nodes\n   * @returns previous node.\n   */\n  findPreviousNode(skipHidden): ITreeNode;\n\n  /**\n   * @returns      true if this node is a descendant of the parameter node\n   */\n  isDescendantOf(node:ITreeNode):boolean;\n\n  // actions\n  /**\n   * Expands / Collapses the node\n   */\n  toggleExpanded();\n  /**\n   * Expands the node\n   */\n  expand();\n  /**\n   * Collapses the node\n   */\n  collapse();\n  /**\n   * Expands all ancestors of the node\n   */\n  ensureVisible();\n  /**\n   * Activates / Deactivates the node (selects / deselects)\n   */\n  toggleActivated(multi);\n  /**\n   * Focus on the node\n   */\n  focus();\n  /**\n   * Blur (unfocus) the node\n   */\n  blur();\n  /**\n   * Scroll the screen to make the node visible\n   */\n  scrollIntoView();\n  /**\n   * Fire an event to the renderer of the tree (if it was registered)\n   */\n  fireEvent(event: any);\n}\n\n/**\n * This is the interface of the TreeModel\n */\nexport interface ITreeModel {\n  // properties\n  /**\n   * All root nodes\n   */\n  roots: ITreeNode[];\n  /**\n   * Current active (selected) node\n   */\n  getActiveNode(): ITreeNode;\n  /**\n   * Current focused node\n   */\n  focusedNode: ITreeNode;\n  /**\n   * Options that were passed to the tree component\n   */\n  options: ITreeOptions;\n\n  /**\n   * Is the tree currently focused\n   */\n  isFocused: boolean;\n\n  // helpers\n  /**\n   * @returns      first root of the tree\n   */\n  getFirstRoot(): ITreeNode;\n  /**\n   * @returns      last root of the tree\n   */\n  getLastRoot(): ITreeNode;\n\n  // actions\n  /**\n   * Focuses or blurs the tree\n   * @param value  true or false - whether to set focus or blur.\n   */\n  setFocus(value: boolean);\n  /**\n   * Focuses on the next node in the tree (same as down arrow)\n   */\n  focusNextNode();\n  /**\n   * Focuses on the previous node in the tree (same as up arrow)\n   */\n  focusPreviousNode();\n  /**\n   * Focuses on the inner child of the current focused node (same as right arrow on an expanded node)\n   */\n  focusDrillDown();\n  /**\n   * Focuses on the parent of the current focused node (same as left arrow on a collapsed node)\n   */\n  focusDrillUp();\n  /**\n   * Marks isHidden field in all nodes recursively according to the filter param.\n   * If a node is marked visible, all of its ancestors will be marked visible as well.\n   * @param filter  either a string or a function.\n   *   In case it's a string, it will be searched case insensitively in the node's display attribute\n   *   In case it's a function, it will be passed the node, and should return true if the node should be visible, false otherwise\n   * @param autoShow  if true, make sure all nodes that passed the filter are visible\n   */\n  filterNodes(filter, autoShow?:boolean);\n  /**\n   * Marks all nodes isHidden = false\n   */\n  clearFilter();\n  /**\n   * moves a node from one location in the tree to another\n   * @param location  has a from and a to attributes, each has a node and index attributes.\n     The combination of node + index tells which node needs to be moved, and to where\n   */\n  moveNode(node:ITreeNode, to:{node:ITreeNode, index:number});\n\n}\n\n/**\n * This is the interface of the TreeNodeDrag service\n */\nexport interface ITreeNodeDrag {\n  /**\n   * Gets the current dragged node. Useful for overriding the drop action.\n   * @param node  The parent node of the current dragged node\n   * @param index  The index inside parent's children, of the current dragged node\n   */\n  getDragNode():{ node: ITreeNode, index:number };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}